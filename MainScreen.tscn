[gd_scene load_steps=8 format=2]

[ext_resource path="res://scenes/cutscenes/common/CutSceneFocusEffect.tscn" type="PackedScene" id=1]
[ext_resource path="res://weather/MaxZoomClouds.tscn" type="PackedScene" id=3]
[ext_resource path="res://target/CurrentTargetPortrait.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/IntroVillageScene.tscn" type="PackedScene" id=7]
[ext_resource path="res://WorldEnvDefault.tres" type="Environment" id=8]

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

// MODES
// 0 - DEBUG
// 1 - MULTIPLY
// 2 - SCREEN
// 3 - SOFTLIGHT
// 4 - HARDLIGHT
// 5 - OVERLAY
uniform int mode :hint_range(0,5) = 5;
uniform bool linearColorSpace = false;
uniform vec4 color1 :hint_color = vec4(1, 0.5, 0.8, 1);
uniform vec4 color2 :hint_color = vec4(0.4, 0.8, 1, 1);
uniform vec2 direction = vec2(1.0, 1.0);
uniform float opacity :hint_range(0, 1) = 0.5;

 vec3 srgb_to_linear(vec3 c){
	return c * (c * (c * 0.305306011 + 0.682171111) + 0.012522878);
}

vec3 linear_to_srgb(vec3 c){
	return max(1.055 * pow(c, vec3(0.416666667)) - 0.055, 0.0);
}

void fragment(){
	vec2 uv = FRAGCOORD.xy / (1.0 / SCREEN_PIXEL_SIZE).xy;
	vec4 src = texture(SCREEN_TEXTURE, uv);
	
	vec3 c_a = src.rgb;
	vec3 grad1 = color1.rgb;
	vec3 grad2 = color2.rgb;
	vec3 c_f;
	
	if (linearColorSpace){ 
		c_a = linear_to_srgb(c_a);
		grad1 = linear_to_srgb(grad1);
		grad2 = linear_to_srgb(grad2);
	}

	float param = dot(uv - 0.5, direction);
	vec3 c_b = mix(grad1, grad2, param + 0.5);
	
	if (mode == 0){       // DEBUG
		c_f = c_b;
	}else if (mode == 1){ // MULTIPLY
		c_f = c_a * c_b;
	}else if (mode == 2){ // SCREEN
		c_f = 1.0 - (1.0 - c_a) * (1.0 - c_b);
	}else if (mode == 3){ // SOFTLIGHT
		vec3 c_u = c_a * c_b * 2.0 + (1.0 - c_b * 2.0) * c_a * c_a;
		vec3 c_d = (1.0 - c_b) * c_a * 2.0 + (c_b * 2.0 - 1.0) * sqrt(c_a);
		c_f = mix(c_u, c_d, c_b + 0.5);
	}else if (mode == 4){ // HARDLIGHT
		vec3 c_u = c_a * c_b * 2.0;
		vec3 c_d = 1.0 - (1.0 - c_a) * (1.0 - c_b) * 2.0;
		c_f = mix(c_u, c_d, c_b + 0.5);
	}else if (mode == 5){ // OVERLAY
		vec3 c_u = c_a * c_b * 2.0;
		vec3 c_d = 1.0 - (1.0 - c_a) * (1.0 - c_b) * 2.0;
		c_f = mix (c_u, c_d, c_a + 0.5);
	}
	
	if (linearColorSpace){
		c_f = srgb_to_linear(c_f);
	}

	COLOR = vec4(c_f, opacity);
    }"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )
shader_param/mode = 5
shader_param/linearColorSpace = false
shader_param/color1 = Color( 0.0980392, 0.172549, 0.203922, 1 )
shader_param/color2 = Color( 0.835294, 0.109804, 0.682353, 1 )
shader_param/direction = Vector2( 0.1, 0.7 )
shader_param/opacity = 0.409

[node name="MainScreen" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 1920.0
margin_bottom = 1080.0

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 1920, 1080 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="WorldEnvironment" type="WorldEnvironment" parent="ViewportContainer/Viewport"]
environment = ExtResource( 8 )

[node name="IntroVillageScene" parent="ViewportContainer/Viewport" instance=ExtResource( 7 )]

[node name="GUI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="CanvasLayer" type="CanvasLayer" parent="GUI"]

[node name="CurrentTarget" parent="GUI/CanvasLayer" instance=ExtResource( 6 )]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 0.0
margin_bottom = 0.0

[node name="CinematicEffect" parent="GUI/CanvasLayer" instance=ExtResource( 1 )]

[node name="Effects" type="Control" parent="."]
margin_right = 1920.0
margin_bottom = 1080.0

[node name="Ambience" type="ColorRect" parent="Effects"]
material = SubResource( 7 )
margin_right = 1920.0
margin_bottom = 1080.0

[node name="MaxZoomClouds" parent="Effects" instance=ExtResource( 3 )]
visible = true
